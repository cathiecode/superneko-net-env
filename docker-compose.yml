version: "3"

services:
  web:
    image: ghcr.io/cathiecode/superneko.net:release
    restart: always
    links:
      - db
      - redis
      - meilisearch
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./files:/misskey/files
      - ./src/misskey/.config:/misskey/.config:ro

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    volumes:
      - ./redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  db:
    restart: always
    image: postgres:15-alpine
    networks:
      - internal_network
    env_file:
      - src/docker.env
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./src/postgres.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  proxy:
    restart: always
    image: nginx:1
    networks:
      - internal_network
      - external_network
    volumes:
      - ./www:/var/www/html
      - ./letsencrypt:/etc/letsencrypt
      - ./src/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    depends_on:
      web:
        condition: service_healthy


  cron:
    build: ./src/crond
    networks:
      - internal_network
      - external_network
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./rclone:/root/.config/rclone
      - ./www:/var/www/html
      - ./src/crond/crontabs:/etc/crontabs:ro

  meilisearch:
    restart: always
    image: getmeili/meilisearch:v1.1.1
    environment:
      - MEILI_NO_ANALYTICS=true
      - MEILI_ENV=production
#    env_file:
#      - .config/meilisearch.env
    networks:
      - internal_network
    volumes:
      - ./meili_data:/meili_data

networks:
  internal_network:
    internal: true
  external_network: